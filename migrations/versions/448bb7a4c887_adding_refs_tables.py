"""Adding refs tables

Revision ID: 448bb7a4c887
Revises: 434cfc45b34c
Create Date: 2023-10-17 09:06:53.998542
"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
# import pgvector  # Commented out as pgvector is not supported
# from pgvector.sqlalchemy import Vector  # Commented out as pgvector is not supported

# revision identifiers, used by Alembic.
revision: str = '448bb7a4c887'
down_revision: Union[str, None] = '434cfc45b34c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Tables or columns that were supposed to use pgvector.Vector have been commented out
    # and should be adjusted according to your database's capabilities or replaced with
    # alternative implementations.

    # Example table creations without Vector type usage
    op.create_table('conceptdoc',
        sa.Column('concept_id', sa.Integer(), nullable=False),
        sa.Column('document_id', sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint('concept_id', 'document_id')
    )

    op.create_table('entity',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('wikidata_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )

    # Ensure to adjust your schema definitions and business logic to work without the Vector types
    # or explore alternative ways to handle vector data within the limitations of your database environment.

    # Other table creations, adjustments, or data migrations should go here

    op.drop_column('keyphrase', 'document_id')
    # ### end Alembic commands ###

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Similar adjustments as in the upgrade function to ensure consistency
    # Add back any columns or tables removed in the upgrade, minus the usage of Vector type

    # Example of adding back a dropped column without involving Vector type
    op.add_column('keyphrase', sa.Column('document_id', sa.INTEGER(), autoincrement=False, nullable=True))

    # Ensure your downgrade path is consistent with the upgrade path in terms of database schema
    # ### end Alembic commands ###

